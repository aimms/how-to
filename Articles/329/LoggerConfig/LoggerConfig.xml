<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">


<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- The use of this file in your AIMMS projects is explained in
         https://how-to.aimms.com/Articles/329/329-more-logging.html 
    -->

    <!-- Section 1: Appenders -->
    
    <!-- Use this appender when logging on AIMMS PRO for a solver session, or for a WebUI data session -->
    <appender class="org.apache.log4j.rolling.RollingFileAppender" name="logfile">
        <rollingPolicy class="org.apache.log4j.rolling.FixedWindowRollingPolicy">

            <!-- The following filenaming for log files is in use since AIMMS PRO 2.34.2 --> 
            <param value="${AIMMSPRO_DATADIR}/Log/Sessions/%X{projectName}-%X{projectVersion}-%X{startupMode}-%X{timeStamp}-%X{sessionId}-%i.log" name="FileNamePattern"/>

            <!-- The following filenaming for log files is in use for AIMMS PRO 2.34.1 and older -->
            <!-- <param name="FileNamePattern" value="${AIMMSPRO_DATADIR}/Log/Sessions/%X{sessionId}-%i.log"/> -->

            <param value="1" name="MinIndex"/>
            <param value="10" name="MaxIndex"/>
        </rollingPolicy>
        <triggeringPolicy class="org.apache.log4j.rolling.SizeBasedTriggeringPolicy">
            <param value="50MB" name="MaxFileSize"/>
        </triggeringPolicy>
        <layout class="org.apache.log4j.PatternLayout">
            <param value="%d{ISO8601} %t [%p] {%c} %m%n" name="ConversionPattern"/>
        </layout>           
    </appender>

    <!-- Use this appender when logging on the AIMMS Cloud -->
    <appender name="stdout" class="org.apache.log4j.ConsoleAppender"> 
        <param name="Target" value="System.out"/> 
        <layout class="org.apache.log4j.PatternLayout"> 
            <param name="ConversionPattern" value="%d{HH:mm:ss,SSS} %t [%p] {%c} %m%n"/> 
        </layout> 
    </appender>

    <!-- see http://wiki.apache.org/logging-log4j/Log4jXmlFormat for formatting options -->
    <appender name="MyFileAppender" class="org.apache.log4j.FileAppender">
        <param name="File" value="log/aimms-log.txt" />
        <param name="Append" value="true" />
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss,SSS} %t [%p] {%c} %m%n"/>
        </layout>
    </appender>

    <appender name="MyXMLFileAppender" class="org.apache.log4j.FileAppender">
        <!-- The following File element assumes you start AIMMS with the current directory equal to the project directory.
             If not, please adapt the path of the .xml file to a fixed path.
        -->
        <param name="File" value="log/aimms-log.xml" />
        <param name="Append" value="true" />
        <layout class="org.apache.log4j.XMLLayout"/>
    </appender>  

    <!-- Section 2: Loggers -->
    <logger name="AIMMS.Trace" >
        <level value="warn"/>
    </logger>
    <logger name="AIMMS.Trace.DataDefinition" >
        <!-- When set to debug, this logger will report on timings of individual definition evaluations -->
        <level value="warn"/>
    </logger>
    <logger name="AIMMS.Trace.Procedure">
        <!--- Tracing entering and leaving AIMMS Procedures.
              * Info: procedure calls outside a loop are logged.
              * Trace: all procedure calls are logged.
        -->
        <level value="info"/>
    </logger>
    <logger name="AIMMS.Trace.Statement">
        <!---  
              * Info: No tracing of statements (default)
              * Trace: entering/leaving all statements are logged (serious disk filler).
              
              * When the level is trace, and the hidden option statement_memory_impact_threshold is given a nonnegative value,
              * increases and decreases of memory usage, exceeding the value given at statement_memory_impact_threshold, are also logged.
        -->
        <level value="info"/>
    </logger>
    <logger name="ModularCompiler">
        <!--- The AIMMS Compiler -->
        <level value="info"/> 
    </logger>
    <logger name="AIMMS.compilation.needed">
        <!--- tracking which identifiers need compilation. 
              Default value info. 
              When this logger is set to trace, an identifier that requires compilation before use is traced. 
        -->
        <level value="info"/> 
    </logger>
    <logger name="autolib">
        <!--- The handler of the AIMMS repository of libraries
              Warn (default) only log exceptions.
              Info - Wat the handler does
              Trace - Details of how the handler does it.
        -->
        <level value="warn"/> 
    </logger>
    <logger name="AIMMS.Engine" >
        <!--- The multi-threaded AIMMS Engine -->
        <level value="info"/>
    </logger>
    <logger name="AIMMS.Generator" >
        <level value="trace"/>
    </logger>
    <logger name="AIMMS.gui" >
        <level value="warn"/>
    </logger>
    <logger name="AIMMS.caseIO.reading" >
        <!--- With TRACE file positions are logged -->
        <level value="info"/>
    </logger>
    <logger name="AIMMS.caseIO.reading.Timings" >
        <!--- Set to trace, this logger will report on timings of reading case file per component. -->
        <level value="warn"/>
    </logger>
    <logger name="AIMMS.caseIO.writing" >
        <!--- With TRACE file positions are logged -->
        <level value="info"/>
    </logger>
    <logger name="AIMMS.aimmsmutex" >
        <!--- With TRACE acquiring and releasing the mutex is logged -->
        <level value="info"/>
    </logger>
    <logger name="ARMI" >
        <level value="info"/>
    </logger>
    <logger name="AimmsDLLSession" >
        <level value="info"/>
    </logger>
    <logger name="AimmsSession" >
        <level value="info"/>
    </logger>
    <logger name="CDMService" >
        <level value="warn"/>
    </logger>
    <logger name="CDMDB" >
        <level value="warn"/>
    </logger>
    <logger name="CDM" >
        <level value="warn"/>
    </logger>

    <logger name="CubeEngine">
    <!--
       It shows you what happenes in the back-end of WebUI. For example, requests on your
      websockets, how your widgets are being setup, etc..
    -->
    <level value="warn" />
    </logger>
    <logger name="Frontend">
        <!--
           It shows you what happens in your browser. For example, errors triggered, widgets
          loaded, pages loaded, etc..
        -->
        <level value="warn" />
    </logger>
    <logger name="beastweb">
        <!--
           It shows you what happens in HTTP layer between back-end of WebUI and your browser.
           Mainly, it shows you the different HTTP requests send from your browsers
        -->
        <level value="warn" />
    </logger>
    <logger name="CubeEngineLink.WebUIServer">
        <!--
           It shows you what happens when back-end of WebUI process your http requests. For
          example, when you upload file, download file, fetch your custom JS/CSS files.
        -->
      <level value="warn" />
    </logger>
    <logger name="CubeEngineLink.JsonSupport">
        <level value="error"/>
    </logger>
    <logger name="CubeEngineLink.WebUIServer.WebUIJsonServlet">
        <level value="error"/>
    </logger>
    <logger name="CubeEngineLink.AimmsSession">
        <level value="error"/>
    </logger>


    <!--- Database logging -->
    <!--- See also https://documentation.aimms.com/release-notes.html#aimms-improvements 
          https://documentation.aimms.com/release-notes.html#id99
          https://documentation.aimms.com/release-notes.html#id99:~:text=We%20updated%20the%20logging%20for%20the%20AIMMS%20database%20functionality.%20All%20database%2Drelated%20activity%20is%20now%20logged%20on%20child%20loggers%20of%20AIMMS
          
    -->
    <logger name="AIMMS.Database">
        <!--- Exchanging data with ODBC data sources, the log levels are as follows:
            o Info: model level
            o DEBUG: statement level
            o TRACE: field level
          -->
        <level value="info"/>
    </logger>
    <logger name="AIMMS.Database.a7idb">
        <!--- initial analysis of the database read or write statement.
            o Info: model level
            o DEBUG: statement level
            o TRACE: field level
          -->
        <level value="info"/>
    </logger>
    <logger name="AIMMS.Database.dbms.SqlExecuter">
        <!-- Connecting wih ODBC data sources and managing transactions -->
        <level value="info"/>
    </logger>

    <!--- Various layers in the HTTP library -->
    <logger name="net4cxx" >
        <level value="warn"/>
    </logger>
    <logger name="httpclient" >
        <level value="info"/>
    </logger>

    <!-- Section 3: Final configuration -->
    <root>
        <priority value="info" />

        <!-- Use this appender when logging on AIMMS PRO for a solver session, or for a WebUI data session -->
        <!-- <appender-ref ref="logfile" /> --> 

        <!-- Use this if you want to use your favorite text editor to inspect your log, created using AIMMS Developer -->
        <appender-ref ref="MyFileAppender" />


        <!-- Use this if you want Log4View to inspect your log, created using AIMMS Developer -->
        <!-- <appender-ref ref="MyXMLFileAppender" />  --> 


        <!-- Use this for applications published on AIMMS Cloud -->
        <!-- <appender-ref ref="stdout" /> --> 

   </root>

</log4j:configuration>
