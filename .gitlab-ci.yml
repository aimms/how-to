stages:
  - test
  - deploy

.run_on_dockerhost: &run_on_dockerhost
  tags:
    - docker20
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  image: gitlab.aimms.com:5050/other/dockerdev/documentation:latest

linkcheck:
  <<: *run_on_dockerhost
  stage: test
  script:
    - python3 -msphinx -W --keep-going -b linkcheck . _build/linkcheck
  allow_failure: true

spellcheck:
  <<: *run_on_dockerhost
  stage: test
  script:
    - python3 -msphinx -W --keep-going -b spelling . _build/spelling

build:
  <<: *run_on_dockerhost
  stage: test
  script:
    - sphinx-build -W --keep-going -b html . _build/html

build_and_staging:
  <<: *run_on_dockerhost
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH != "master"
      when: on_success
    - when: never
  script:
    - sphinx-build -M html . _build
    - bash load_ssh_key_for_deploy.sh
    - ssh support@data.aimms.com mkdir -p /home/aimms/www/how-to-staging/staging/${CI_COMMIT_BRANCH}
    - rsync -r --omit-dir-times --delete-excluded _build/html/ support@data.aimms.com:/home/aimms/www/how-to-staging/staging/${CI_COMMIT_BRANCH}

build_and_deploy:
  <<: *run_on_dockerhost
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - when: never
  script:
    - sphinx-build -b html . _build/html
    - bash load_ssh_key_for_deploy.sh
    - ssh support@data.aimms.com rm -f -r /home/aimms/www/how-to.aimms.com/staging/
    - rsync -rt _build/html/ support@data.aimms.com:/home/aimms/www/how-to.aimms.com

az_deploy:
  <<: *run_on_dockerhost
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: on_success
    - when: never
  script:
    - sphinx-build -b html . _build/html
    - az storage copy -s '_build/html' --recursive --destination-container '$web' -- --overwrite=true --as-subdir=false
    - bash load_ssh_key_for_deploy.sh
    - ssh support@data.aimms.com rm -rf /home/aimms/www/how-to-staging/staging/